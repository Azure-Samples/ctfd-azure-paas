{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.13.1.58284",
      "templateHash": "10327079218591191462"
    }
  },
  "parameters": {
    "nameUniquenss": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]"
    },
    "vnet": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy with VNet"
      }
    },
    "redisServerName": {
      "type": "string",
      "defaultValue": "[format('ctfd-redis-{0}', parameters('nameUniquenss'))]",
      "metadata": {
        "description": "Server Name for Azure cache for Redis"
      }
    },
    "redisSkuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Premium",
        "Standard"
      ],
      "metadata": {
        "description": "SKU Name for Azure cache for Redis"
      }
    },
    "redisSkuSize": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The size of the Redis cache"
      },
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ]
    },
    "mariaServerName": {
      "type": "string",
      "defaultValue": "[format('ctfd-mariadb-{0}', parameters('nameUniquenss'))]",
      "metadata": {
        "description": "Server Name for Azure database for MariaDB"
      }
    },
    "administratorLogin": {
      "type": "string",
      "defaultValue": "ctfd",
      "minLength": 1,
      "metadata": {
        "description": "Database administrator login name"
      }
    },
    "administratorLoginPassword": {
      "type": "secureString",
      "minLength": 8,
      "metadata": {
        "description": "Database administrator password"
      }
    },
    "databaseVCores": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [
        2,
        4,
        8,
        16,
        32
      ],
      "metadata": {
        "description": "Database vCores count"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[format('ctfd-kv-{0}', parameters('nameUniquenss'))]",
      "metadata": {
        "description": "Name of Azure Key Vault"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[format('ctfd-server-{0}', parameters('nameUniquenss'))]",
      "metadata": {
        "description": "Server Name for Azure app service"
      }
    },
    "appServicePlanSkuName": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": [
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "App Service Plan SKU name"
      }
    },
    "webAppName": {
      "type": "string",
      "defaultValue": "[format('ctfd-app-{0}', parameters('nameUniquenss'))]",
      "metadata": {
        "description": "Name for Azure Web app"
      }
    },
    "logAnalyticsName": {
      "type": "string",
      "defaultValue": "[format('ctfd-log-analytics-{0}', parameters('nameUniquenss'))]",
      "metadata": {
        "description": "Name for Log Analytics Workspace"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "ctf-vnet",
      "metadata": {
        "description": "Name of the VNet"
      }
    },
    "resourcesLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "resourcesSubnetName": "resources_subnet",
    "integrationSubnetName": "integration_subnet",
    "ctfCacheSecretName": "ctfd-cache-url",
    "ctfDatabaseSecretName": "ctfd-db-url"
  },
  "resources": [
    {
      "condition": "[parameters('vnet')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "vnetDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('resourcesLocation')]"
          },
          "integrationSubnetName": {
            "value": "[variables('integrationSubnetName')]"
          },
          "resouorcesSubnetName": {
            "value": "[variables('resourcesSubnetName')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "16870641998183944184"
            }
          },
          "parameters": {
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "resouorcesSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "integrationSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "variables": {
            "virtualNetworkCIDR": "10.200.0.0/16",
            "integrationSubnetCIDR": "10.200.1.0/24",
            "resourcesSubnetCIDR": "10.200.2.0/24"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('virtualNetworkCIDR')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('resouorcesSubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('resourcesSubnetCIDR')]",
                      "privateEndpointNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[parameters('integrationSubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('integrationSubnetCIDR')]",
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          }
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Enabled"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "logAnalyticsDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appName": {
            "value": "[parameters('webAppName')]"
          },
          "logAnalyticsName": {
            "value": "[parameters('logAnalyticsName')]"
          },
          "location": {
            "value": "[parameters('resourcesLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "2139376637998606985"
            }
          },
          "parameters": {
            "appName": {
              "type": "string",
              "metadata": {
                "description": "Name of WebApp to monitor"
              }
            },
            "logAnalyticsName": {
              "type": "string",
              "metadata": {
                "description": "Name of Log Analytics Workspace"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-08-01",
              "name": "[parameters('logAnalyticsName')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "Log Analytics",
                "ProjectName": "[parameters('appName')]"
              },
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 120,
                "features": {
                  "searchVersion": 1,
                  "legacy": 0,
                  "enableLogAccessUsingOnlyResourcePermissions": true
                }
              }
            }
          ],
          "outputs": {
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "ctfDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "location": {
            "value": "[parameters('resourcesLocation')]"
          },
          "appServicePlanName": {
            "value": "[parameters('appServicePlanName')]"
          },
          "appServicePlanSkuName": {
            "value": "[parameters('appServicePlanSkuName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "ctfCacheUrlSecretName": {
            "value": "[variables('ctfCacheSecretName')]"
          },
          "ctfDatabaseUrlSecretName": {
            "value": "[variables('ctfDatabaseSecretName')]"
          },
          "integrationSubnetName": {
            "value": "[variables('integrationSubnetName')]"
          },
          "webAppName": {
            "value": "[parameters('webAppName')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'logAnalyticsDeploy'), '2020-10-01').outputs.logAnalyticsWorkspaceId.value]"
          },
          "vnet": {
            "value": "[parameters('vnet')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "6067021019649439998"
            }
          },
          "parameters": {
            "vnet": {
              "type": "bool",
              "metadata": {
                "description": "Deploy in VNet"
              }
            },
            "appServicePlanName": {
              "type": "string",
              "metadata": {
                "description": "Server Name for Azure app service"
              }
            },
            "webAppName": {
              "type": "string",
              "metadata": {
                "description": "Name for Azure Web app"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "integrationSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Name of the integration subnet"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Name of azure key vault"
              }
            },
            "ctfDatabaseUrlSecretName": {
              "type": "string",
              "metadata": {
                "description": "Secret Name of the ctf database url in key vault"
              }
            },
            "ctfCacheUrlSecretName": {
              "type": "string",
              "metadata": {
                "description": "Secret Name of the ctf cache url in key vault"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Anaytics Workspace Id"
              }
            },
            "appServicePlanSkuName": {
              "type": "string",
              "metadata": {
                "description": "App Service Plan SKU name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-12-01",
              "name": "[parameters('appServicePlanName')]",
              "location": "[parameters('location')]",
              "kind": "linux",
              "properties": {
                "reserved": true
              },
              "sku": {
                "name": "[parameters('appServicePlanSkuName')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[parameters('webAppName')]",
              "location": "[parameters('location')]",
              "tags": {},
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "virtualNetworkSubnetId": "[if(parameters('vnet'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('integrationSubnetName')), null())]",
                "vnetRouteAllEnabled": "[if(parameters('vnet'), true(), false())]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "DATABASE_URL",
                      "value": "[format('@Microsoft.KeyVault(SecretUri=https://{0}.vault.azure.net/secrets/{1}/)', parameters('keyVaultName'), parameters('ctfDatabaseUrlSecretName'))]"
                    },
                    {
                      "name": "REDIS_URL",
                      "value": "[format('@Microsoft.KeyVault(SecretUri=https://{0}.vault.azure.net/secrets/{1}/)', parameters('keyVaultName'), parameters('ctfCacheUrlSecretName'))]"
                    },
                    {
                      "name": "REVERSE_PROXY",
                      "value": "False"
                    },
                    {
                      "name": "WEBSITES_PORT",
                      "value": "8000"
                    },
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "https://index.docker.io"
                    }
                  ],
                  "linuxFxVersion": "DOCKER|ctfd/ctfd:latest"
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('webAppName'), 'logs')]",
              "properties": {
                "applicationLogs": {
                  "fileSystem": {
                    "level": "Warning"
                  }
                },
                "httpLogs": {
                  "fileSystem": {
                    "retentionInMb": 40,
                    "retentionInDays": 5,
                    "enabled": true
                  }
                },
                "failedRequestsTracing": {
                  "enabled": true
                },
                "detailedErrorMessages": {
                  "enabled": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', parameters('webAppName'))]",
              "name": "[format('{0}-diagnostics', parameters('webAppName'))]",
              "properties": {
                "logs": [
                  {
                    "category": "AppServiceHTTPLogs",
                    "categoryGroup": null,
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 0,
                      "enabled": false
                    }
                  },
                  {
                    "category": "AppServiceConsoleLogs",
                    "categoryGroup": null,
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 0,
                      "enabled": false
                    }
                  },
                  {
                    "category": "AppServiceAppLogs",
                    "categoryGroup": null,
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 0,
                      "enabled": false
                    }
                  },
                  {
                    "category": "AppServiceAuditLogs",
                    "categoryGroup": null,
                    "enabled": false,
                    "retentionPolicy": {
                      "days": 0,
                      "enabled": false
                    }
                  },
                  {
                    "category": "AppServiceIPSecAuditLogs",
                    "categoryGroup": null,
                    "enabled": false,
                    "retentionPolicy": {
                      "days": 0,
                      "enabled": false
                    }
                  },
                  {
                    "category": "AppServicePlatformLogs",
                    "categoryGroup": null,
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 0,
                      "enabled": false
                    }
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
              ]
            }
          ],
          "outputs": {
            "servicePrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2022-03-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'logAnalyticsDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'vnetDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "keyVaultDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "location": {
            "value": "[parameters('resourcesLocation')]"
          },
          "readerPrincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ctfDeploy'), '2020-10-01').outputs.servicePrincipalId.value]"
          },
          "resourcesSubnetName": {
            "value": "[variables('resourcesSubnetName')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "vnet": {
            "value": "[parameters('vnet')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "352813215637285560"
            }
          },
          "parameters": {
            "vnet": {
              "type": "bool",
              "metadata": {
                "description": "Deploy in VNet"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Name of the key vault."
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "tenantId": {
              "type": "string",
              "defaultValue": "[subscription().tenantId]",
              "metadata": {
                "description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Get it by using Get-AzSubscription cmdlet."
              }
            },
            "readerPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
              }
            },
            "keysPermissions": {
              "type": "array",
              "defaultValue": [
                "list",
                "get"
              ],
              "metadata": {
                "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
              }
            },
            "secretsPermissions": {
              "type": "array",
              "defaultValue": [
                "list",
                "get"
              ],
              "metadata": {
                "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "standard",
                "premium"
              ],
              "metadata": {
                "description": "Specifies whether the key vault is a standard vault or a premium vault."
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "resourcesSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Name of the resources subnet"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-11-01-preview",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[parameters('tenantId')]",
                "publicNetworkAccess": "[if(parameters('vnet'), 'Disabled', 'Enabled')]",
                "accessPolicies": [
                  {
                    "objectId": "[parameters('readerPrincipalId')]",
                    "tenantId": "[parameters('tenantId')]",
                    "permissions": {
                      "keys": "[parameters('keysPermissions')]",
                      "secrets": "[parameters('secretsPermissions')]"
                    }
                  }
                ],
                "sku": {
                  "name": "[parameters('skuName')]",
                  "family": "A"
                },
                "networkAcls": {
                  "defaultAction": "Deny",
                  "bypass": "AzureServices"
                }
              }
            },
            {
              "condition": "[parameters('vnet')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "keyVaultPrivateEndpointDeploy",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "virtualNetworkName": {
                    "value": "[parameters('virtualNetworkName')]"
                  },
                  "subnetName": {
                    "value": "[parameters('resourcesSubnetName')]"
                  },
                  "resuorceId": {
                    "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                  },
                  "resuorceGroupId": {
                    "value": "vault"
                  },
                  "privateDnsZoneName": {
                    "value": "privatelink.vaultcore.azure.net"
                  },
                  "privateEndpointName": {
                    "value": "keyvault_private_endpoint"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.13.1.58284",
                      "templateHash": "8751525495170564748"
                    }
                  },
                  "parameters": {
                    "virtualNetworkName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the VNet"
                      }
                    },
                    "subnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the subnet"
                      }
                    },
                    "resuorceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Id of the resource"
                      }
                    },
                    "resuorceGroupId": {
                      "type": "string",
                      "metadata": {
                        "description": "Group Id of the resource"
                      }
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of dns zone"
                      }
                    },
                    "privateEndpointName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of private endpoint"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location for all resources."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('privateEndpointName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpointName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('resuorceId')]",
                              "groupIds": [
                                "[parameters('resuorceGroupId')]"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "properties": {}
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('{0}-link', parameters('privateDnsZoneName')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/default', parameters('privateEndpointName'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config1",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]",
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'ctfDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "redisDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "redisServerName": {
            "value": "[parameters('redisServerName')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "resourcesSubnetName": {
            "value": "[variables('resourcesSubnetName')]"
          },
          "location": {
            "value": "[parameters('resourcesLocation')]"
          },
          "vnet": {
            "value": "[parameters('vnet')]"
          },
          "ctfCacheSecretName": {
            "value": "[variables('ctfCacheSecretName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "redisSkuName": {
            "value": "[parameters('redisSkuName')]"
          },
          "redisSkuSize": {
            "value": "[parameters('redisSkuSize')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "16384234985714363127"
            }
          },
          "parameters": {
            "vnet": {
              "type": "bool",
              "metadata": {
                "description": "Deploy in VNet"
              }
            },
            "redisServerName": {
              "type": "string",
              "metadata": {
                "description": "Server Name for Azure cache for Redis"
              }
            },
            "redisSkuName": {
              "type": "string",
              "metadata": {
                "description": "SKU Name for Azure cache for Redis"
              }
            },
            "redisSkuSize": {
              "type": "int",
              "metadata": {
                "description": "The size of the Redis cache"
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "resourcesSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Name of the resources subnet"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Name of the key vault"
              }
            },
            "ctfCacheSecretName": {
              "type": "string",
              "metadata": {
                "description": "Name of the connection string secret"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "variables": {
            "family": "[if(or(equals(parameters('redisSkuName'), 'Basic'), equals(parameters('redisSkuName'), 'Standard')), 'C', 'P')]"
          },
          "resources": [
            {
              "type": "Microsoft.Cache/redis",
              "apiVersion": "2022-06-01",
              "name": "[parameters('redisServerName')]",
              "location": "[parameters('location')]",
              "properties": {
                "enableNonSslPort": true,
                "publicNetworkAccess": "[if(parameters('vnet'), 'Disabled', 'Enabled')]",
                "sku": {
                  "capacity": "[parameters('redisSkuSize')]",
                  "family": "[variables('family')]",
                  "name": "[parameters('redisSkuName')]"
                }
              }
            },
            {
              "condition": "[parameters('vnet')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "redisPrivateEndpointDeploy",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "virtualNetworkName": {
                    "value": "[parameters('virtualNetworkName')]"
                  },
                  "subnetName": {
                    "value": "[parameters('resourcesSubnetName')]"
                  },
                  "resuorceId": {
                    "value": "[resourceId('Microsoft.Cache/redis', parameters('redisServerName'))]"
                  },
                  "resuorceGroupId": {
                    "value": "redisCache"
                  },
                  "privateDnsZoneName": {
                    "value": "privatelink.redis.cache.windows.net"
                  },
                  "privateEndpointName": {
                    "value": "redis_private_endpoint"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.13.1.58284",
                      "templateHash": "8751525495170564748"
                    }
                  },
                  "parameters": {
                    "virtualNetworkName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the VNet"
                      }
                    },
                    "subnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the subnet"
                      }
                    },
                    "resuorceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Id of the resource"
                      }
                    },
                    "resuorceGroupId": {
                      "type": "string",
                      "metadata": {
                        "description": "Group Id of the resource"
                      }
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of dns zone"
                      }
                    },
                    "privateEndpointName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of private endpoint"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location for all resources."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('privateEndpointName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpointName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('resuorceId')]",
                              "groupIds": [
                                "[parameters('resuorceGroupId')]"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "properties": {}
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('{0}-link', parameters('privateDnsZoneName')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/default', parameters('privateEndpointName'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config1",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]",
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cache/redis', parameters('redisServerName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "redisKeyDeploy",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "secretName": {
                    "value": "[parameters('ctfCacheSecretName')]"
                  },
                  "secretValue": {
                    "value": "[format('redis://:{0}@{1}.redis.cache.windows.net', listKeys(resourceId('Microsoft.Cache/redis', parameters('redisServerName')), '2022-06-01').primaryKey, parameters('redisServerName'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.13.1.58284",
                      "templateHash": "3722448997219596879"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of Azure Key Vault"
                      }
                    },
                    "secretName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the secret"
                      }
                    },
                    "secretValue": {
                      "type": "secureString",
                      "metadata": {
                        "description": "Value of the secret"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secretName'))]",
                      "properties": {
                        "value": "[parameters('secretValue')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cache/redis', parameters('redisServerName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'vnetDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "mariaDbDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "mariaServerName": {
            "value": "[parameters('mariaServerName')]"
          },
          "administratorLogin": {
            "value": "[parameters('administratorLogin')]"
          },
          "administratorLoginPassword": {
            "value": "[parameters('administratorLoginPassword')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "resourcesSubnetName": {
            "value": "[variables('resourcesSubnetName')]"
          },
          "location": {
            "value": "[parameters('resourcesLocation')]"
          },
          "vnet": {
            "value": "[parameters('vnet')]"
          },
          "ctfDbSecretName": {
            "value": "[variables('ctfDatabaseSecretName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "databaseVCores": {
            "value": "[parameters('databaseVCores')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "1222218760849843699"
            }
          },
          "parameters": {
            "vnet": {
              "type": "bool",
              "metadata": {
                "description": "Deploy in VNet"
              }
            },
            "mariaServerName": {
              "type": "string",
              "metadata": {
                "description": "Server Name for Azure database for MariaDB"
              }
            },
            "administratorLogin": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Database administrator login name"
              }
            },
            "administratorLoginPassword": {
              "type": "secureString",
              "minLength": 8,
              "metadata": {
                "description": "Database administrator password"
              }
            },
            "databaseVCores": {
              "type": "int",
              "metadata": {
                "description": "Database vCores count"
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "resourcesSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Name of the resources subnet"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Name of the key vault"
              }
            },
            "ctfDbSecretName": {
              "type": "string",
              "metadata": {
                "description": "Name of the connection string secret"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.DBforMariaDB/servers/configurations",
              "apiVersion": "2018-06-01",
              "name": "[format('{0}/{1}', parameters('mariaServerName'), 'character_set_server')]",
              "properties": {
                "source": "user-override",
                "value": "utf8mb4"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMariaDB/servers', parameters('mariaServerName'))]"
              ]
            },
            {
              "type": "Microsoft.DBforMariaDB/servers/configurations",
              "apiVersion": "2018-06-01",
              "name": "[format('{0}/{1}', parameters('mariaServerName'), 'collation_server')]",
              "properties": {
                "source": "user-override",
                "value": "utf8mb4_unicode_ci"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMariaDB/servers', parameters('mariaServerName'))]"
              ]
            },
            {
              "type": "Microsoft.DBforMariaDB/servers/configurations",
              "apiVersion": "2018-06-01",
              "name": "[format('{0}/{1}', parameters('mariaServerName'), 'wait_timeout')]",
              "properties": {
                "source": "user-override",
                "value": "28800"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMariaDB/servers', parameters('mariaServerName'))]"
              ]
            },
            {
              "condition": "[not(parameters('vnet'))]",
              "type": "Microsoft.DBforMariaDB/servers/firewallRules",
              "apiVersion": "2018-06-01",
              "name": "[format('{0}/{1}', parameters('mariaServerName'), 'AllowAllWindowsAzureIps')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMariaDB/servers', parameters('mariaServerName'))]"
              ]
            },
            {
              "type": "Microsoft.DBforMariaDB/servers",
              "apiVersion": "2018-06-01",
              "name": "[parameters('mariaServerName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[format('GP_Gen5_{0}', parameters('databaseVCores'))]",
                "size": "5120"
              },
              "properties": {
                "createMode": "Default",
                "version": "10.3",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "sslEnforcement": "Disabled",
                "publicNetworkAccess": "[if(parameters('vnet'), 'Disabled', 'Enabled')]",
                "storageProfile": {
                  "storageMB": 5120,
                  "backupRetentionDays": 7,
                  "geoRedundantBackup": "Disabled"
                }
              }
            },
            {
              "condition": "[parameters('vnet')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "mariaDbPrivateEndpointDeploy",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "virtualNetworkName": {
                    "value": "[parameters('virtualNetworkName')]"
                  },
                  "subnetName": {
                    "value": "[parameters('resourcesSubnetName')]"
                  },
                  "resuorceId": {
                    "value": "[resourceId('Microsoft.DBforMariaDB/servers', parameters('mariaServerName'))]"
                  },
                  "resuorceGroupId": {
                    "value": "mariadbServer"
                  },
                  "privateDnsZoneName": {
                    "value": "privatelink.mariadb.database.azure.com"
                  },
                  "privateEndpointName": {
                    "value": "mariadb_private_endpoint"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.13.1.58284",
                      "templateHash": "8751525495170564748"
                    }
                  },
                  "parameters": {
                    "virtualNetworkName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the VNet"
                      }
                    },
                    "subnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the subnet"
                      }
                    },
                    "resuorceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Id of the resource"
                      }
                    },
                    "resuorceGroupId": {
                      "type": "string",
                      "metadata": {
                        "description": "Group Id of the resource"
                      }
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of dns zone"
                      }
                    },
                    "privateEndpointName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of private endpoint"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location for all resources."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('privateEndpointName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpointName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('resuorceId')]",
                              "groupIds": [
                                "[parameters('resuorceGroupId')]"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "properties": {}
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('{0}-link', parameters('privateDnsZoneName')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/default', parameters('privateEndpointName'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config1",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]",
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMariaDB/servers', parameters('mariaServerName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "mariaDbKeyDeploy",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "secretName": {
                    "value": "[parameters('ctfDbSecretName')]"
                  },
                  "secretValue": {
                    "value": "[format('mysql+pymysql://{0}%40{1}.mariadb.database.azure.com:{2}@{3}.mariadb.database.azure.com/ctfd', parameters('administratorLogin'), parameters('mariaServerName'), parameters('administratorLoginPassword'), parameters('mariaServerName'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.13.1.58284",
                      "templateHash": "3722448997219596879"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of Azure Key Vault"
                      }
                    },
                    "secretName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the secret"
                      }
                    },
                    "secretValue": {
                      "type": "secureString",
                      "metadata": {
                        "description": "Value of the secret"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secretName'))]",
                      "properties": {
                        "value": "[parameters('secretValue')]"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'vnetDeploy')]"
      ]
    }
  ]
}