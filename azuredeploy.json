{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.27.1.19265",
      "templateHash": "13219936566428305885"
    }
  },
  "parameters": {
    "resourcesLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vnet": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy with VNet"
      }
    },
    "redisSkuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Premium",
        "Standard"
      ],
      "metadata": {
        "description": "SKU Name for Azure cache for Redis"
      }
    },
    "redisSkuSize": {
      "type": "int",
      "defaultValue": 0,
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "metadata": {
        "description": "The size of the Redis cache"
      }
    },
    "administratorLogin": {
      "type": "string",
      "defaultValue": "ctfd",
      "minLength": 1,
      "metadata": {
        "description": "Database administrator login name"
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "Database administrator password. Minimum 8 characters and maximum 128 characters. Password must contain characters from three of the following categories: English uppercase letters, English lowercase letters, numbers, and non-alphanumeric characters."
      }
    },
    "mysqlType": {
      "type": "string",
      "defaultValue": "Development",
      "allowedValues": [
        "Development",
        "SmallMedium",
        "BusinessCritical"
      ],
      "metadata": {
        "description": "MySQL Type"
      }
    },
    "appServicePlanSkuName": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": [
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "App Service Plan SKU name"
      }
    },
    "webAppName": {
      "type": "string",
      "defaultValue": "[format('ctfd-app-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name for Azure Web app. Controls the DNS name of the CTF website"
      }
    }
  },
  "variables": {
    "containerRegistrySku": "Basic",
    "keyVaultName": "[format('ctfd-kv-{0}', uniqueString(resourceGroup().id))]",
    "ctfCacheSecretName": "ctfd-cache-url",
    "ctfDatabaseSecretName": "ctfd-db-url",
    "virtualNetworkName": "ctf-vnet",
    "internalResourcesSubnetName": "internal_resources_subnet",
    "publicResourcesSubnetName": "public_resources_subnet",
    "databaseResourcesSubnetName": "database_resources_subnet"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[format('ctf-mi-{0}', uniqueString(resourceGroup().id))]",
      "location": "[parameters('resourcesLocation')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "logAnalyticsDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('resourcesLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "5458687641602133277"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "variables": {
            "appName": "CTFd",
            "logAnalyticsName": "[format('ctfd-log-analytics-{0}', uniqueString(resourceGroup().id))]",
            "retentionInDays": 30
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-08-01",
              "name": "[variables('logAnalyticsName')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "Log Analytics",
                "ProjectName": "[variables('appName')]"
              },
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": "[variables('retentionInDays')]",
                "features": {
                  "searchVersion": 1,
                  "legacy": 0,
                  "enableLogAccessUsingOnlyResourcePermissions": true
                }
              }
            }
          ],
          "outputs": {
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
            }
          }
        }
      },
      "metadata": {
        "description": "Deploys Azure Log Analytics workspace"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "acrDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'logAnalyticsDeploy'), '2022-09-01').outputs.logAnalyticsWorkspaceId.value]"
          },
          "location": {
            "value": "[parameters('resourcesLocation')]"
          },
          "containerRegistrySku": {
            "value": "[variables('containerRegistrySku')]"
          },
          "managedIdentityId": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('ctf-mi-{0}', uniqueString(resourceGroup().id)))]"
          },
          "managedIdentityPrincipalId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('ctf-mi-{0}', uniqueString(resourceGroup().id))), '2018-11-30').principalId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "8768583701407300451"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "containerRegistrySku": {
              "type": "string",
              "metadata": {
                "description": "Tier of Azure Container Registry."
              }
            },
            "managedIdentityPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Managed Identity Principal Id."
              }
            },
            "managedIdentityId": {
              "type": "string",
              "metadata": {
                "description": "Managed Identity Id."
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Anaytics Workspace Id"
              }
            }
          },
          "variables": {
            "containerRegistryName": "[format('ctfdacr{0}', uniqueString(resourceGroup().id))]",
            "ctfdImageName": "ctfd-azure-cert:latest",
            "ctfdAzureRepo": "https://github.com/Azure-Samples/ctfd-azure-paas.git"
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2021-06-01-preview",
              "name": "[variables('containerRegistryName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('containerRegistrySku')]"
              },
              "properties": {
                "adminUserEnabled": false
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', variables('containerRegistryName'))]",
              "name": "[format('{0}-diagnostics', variables('containerRegistryName'))]",
              "properties": {
                "logs": [
                  {
                    "category": null,
                    "categoryGroup": "audit",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 5,
                      "enabled": false
                    }
                  },
                  {
                    "category": null,
                    "categoryGroup": "allLogs",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 5,
                      "enabled": false
                    }
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', variables('containerRegistryName'))]",
              "name": "[guid(resourceGroup().id, 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
              "properties": {
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "roleDefinitionId": "[extensionResourceId(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), 'Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "buildAndPush",
              "location": "[parameters('location')]",
              "kind": "AzureCLI",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "timeout": "PT30M",
                "azCliVersion": "2.40.0",
                "environmentVariables": [
                  {
                    "name": "acrName",
                    "value": "[variables('containerRegistryName')]"
                  },
                  {
                    "name": "acrResourceGroup",
                    "secureValue": "[resourceGroup().name]"
                  },
                  {
                    "name": "taggedImageName",
                    "value": "[variables('ctfdImageName')]"
                  },
                  {
                    "name": "repo",
                    "secureValue": "[variables('ctfdAzureRepo')]"
                  },
                  {
                    "name": "platform",
                    "value": "Linux"
                  },
                  {
                    "name": "initialDelay",
                    "secureValue": "30s"
                  }
                ],
                "scriptContent": "#!/bin/bash\nset -e\n\necho \\\"Waiting on RBAC replication \\\"\nsleep $initialDelay\n\naz acr build  \\\n  --registry $acrName \\\n  --image $taggedImageName \\\n  --platform $platform \\\n $repo",
                "retentionInterval": "P1D"
              }
            }
          ],
          "outputs": {
            "acrImage": {
              "type": "string",
              "value": "[format('{0}/{1}', reference(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), '2021-06-01-preview').loginServer, variables('ctfdImageName'))]"
            },
            "registryName": {
              "type": "string",
              "value": "[variables('containerRegistryName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'logAnalyticsDeploy')]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('ctf-mi-{0}', uniqueString(resourceGroup().id)))]"
      ],
      "metadata": {
        "description": "Deploys Azure Container Registry and build a custom CTFd docker image"
      }
    },
    {
      "condition": "[parameters('vnet')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vnetDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('resourcesLocation')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "internalResourcesSubnetName": {
            "value": "[variables('internalResourcesSubnetName')]"
          },
          "publicResourcesSubnetName": {
            "value": "[variables('publicResourcesSubnetName')]"
          },
          "databaseResourcesSubnetName": {
            "value": "[variables('databaseResourcesSubnetName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "12084021275693225961"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "internalResourcesSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Name of the internal resources subnet"
              }
            },
            "publicResourcesSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Name of the public resources subnet"
              }
            },
            "databaseResourcesSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Name of the database resources subnet"
              }
            }
          },
          "variables": {
            "virtualNetworkCIDR": "10.200.0.0/16",
            "publicResourcesSubnetCIDR": "10.200.1.0/26",
            "internalResourcesSubnetCIDR": "10.200.2.0/28",
            "databaseResourcesSubnetCIDR": "10.200.3.0/28"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('virtualNetworkCIDR')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('internalResourcesSubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('internalResourcesSubnetCIDR')]",
                      "privateEndpointNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[parameters('publicResourcesSubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('publicResourcesSubnetCIDR')]",
                      "delegations": [
                        {
                          "name": "dlg-Microsoft.Web-serverfarms",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          }
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[parameters('databaseResourcesSubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('databaseResourcesSubnetCIDR')]",
                      "delegations": [
                        {
                          "name": "dlg-Microsoft.DBforMySQL-flexibleServers",
                          "properties": {
                            "serviceName": "Microsoft.DBforMySQL/flexibleServers"
                          }
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "virtualNetworkId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            },
            "databaseResourcesSubnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '2020-06-01').subnets[2].id]"
            }
          }
        }
      },
      "metadata": {
        "description": "Deploys Virtual Network with two subnets"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ctfDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "location": {
            "value": "[parameters('resourcesLocation')]"
          },
          "appServicePlanSkuName": {
            "value": "[parameters('appServicePlanSkuName')]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "ctfCacheSecretName": {
            "value": "[variables('ctfCacheSecretName')]"
          },
          "ctfDatabaseSecretName": {
            "value": "[variables('ctfDatabaseSecretName')]"
          },
          "publicResourcesSubnetName": {
            "value": "[variables('publicResourcesSubnetName')]"
          },
          "webAppName": {
            "value": "[parameters('webAppName')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'logAnalyticsDeploy'), '2022-09-01').outputs.logAnalyticsWorkspaceId.value]"
          },
          "acrImageName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acrDeploy'), '2022-09-01').outputs.acrImage.value]"
          },
          "registryName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acrDeploy'), '2022-09-01').outputs.registryName.value]"
          },
          "managedIdentityClientId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('ctf-mi-{0}', uniqueString(resourceGroup().id))), '2018-11-30').clientId]"
          },
          "managedIdentityId": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('ctf-mi-{0}', uniqueString(resourceGroup().id)))]"
          },
          "vnet": {
            "value": "[parameters('vnet')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "12758198425395547597"
            }
          },
          "parameters": {
            "vnet": {
              "type": "bool",
              "metadata": {
                "description": "Deploy in VNet"
              }
            },
            "webAppName": {
              "type": "string",
              "metadata": {
                "description": "Name for Azure Web app"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "publicResourcesSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Name of the public subnet"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Name of azure key vault"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Anaytics Workspace Id"
              }
            },
            "appServicePlanSkuName": {
              "type": "string",
              "metadata": {
                "description": "App Service Plan SKU name"
              }
            },
            "acrImageName": {
              "type": "string",
              "metadata": {
                "description": "Azure Container Registry Image name"
              }
            },
            "registryName": {
              "type": "string",
              "metadata": {
                "description": "Azure Container Registry name"
              }
            },
            "ctfCacheSecretName": {
              "type": "string",
              "metadata": {
                "description": "Name of the key vault secret holding the cache connection string"
              }
            },
            "ctfDatabaseSecretName": {
              "type": "string",
              "metadata": {
                "description": "Name of the key vault secret holding the database connection string"
              }
            },
            "managedIdentityClientId": {
              "type": "string",
              "metadata": {
                "description": "CTF managed identity client ID"
              }
            },
            "managedIdentityId": {
              "type": "string",
              "metadata": {
                "description": "CTF managed identity ID"
              }
            }
          },
          "variables": {
            "appServicePlanName": "[format('ctfd-server-{0}', uniqueString(resourceGroup().id))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-12-01",
              "name": "[variables('appServicePlanName')]",
              "location": "[parameters('location')]",
              "kind": "linux",
              "properties": {
                "reserved": true
              },
              "sku": {
                "name": "[parameters('appServicePlanSkuName')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[parameters('webAppName')]",
              "location": "[parameters('location')]",
              "tags": {},
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "virtualNetworkSubnetId": "[if(parameters('vnet'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('publicResourcesSubnetName')), null())]",
                "keyVaultReferenceIdentity": "[parameters('managedIdentityId')]",
                "vnetRouteAllEnabled": "[if(parameters('vnet'), true(), false())]",
                "siteConfig": {
                  "acrUseManagedIdentityCreds": true,
                  "acrUserManagedIdentityID": "[parameters('managedIdentityClientId')]",
                  "appSettings": [
                    {
                      "name": "DATABASE_URL",
                      "value": "[format('@Microsoft.KeyVault(SecretUri=https://{0}.vault.azure.net/secrets/{1}/)', parameters('keyVaultName'), parameters('ctfDatabaseSecretName'))]"
                    },
                    {
                      "name": "REDIS_URL",
                      "value": "[format('@Microsoft.KeyVault(SecretUri=https://{0}.vault.azure.net/secrets/{1}/)', parameters('keyVaultName'), parameters('ctfCacheSecretName'))]"
                    },
                    {
                      "name": "REVERSE_PROXY",
                      "value": "False"
                    },
                    {
                      "name": "WEBSITES_PORT",
                      "value": "8000"
                    },
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "[format('{0}.azurecr.io', parameters('registryName'))]"
                    }
                  ],
                  "linuxFxVersion": "[format('DOCKER|{0}', parameters('acrImageName'))]"
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('webAppName'), 'logs')]",
              "properties": {
                "applicationLogs": {
                  "fileSystem": {
                    "level": "Warning"
                  }
                },
                "httpLogs": {
                  "fileSystem": {
                    "retentionInMb": 40,
                    "retentionInDays": 5,
                    "enabled": true
                  }
                },
                "failedRequestsTracing": {
                  "enabled": true
                },
                "detailedErrorMessages": {
                  "enabled": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', parameters('webAppName'))]",
              "name": "[format('{0}-diagnostics', parameters('webAppName'))]",
              "properties": {
                "logs": [
                  {
                    "category": "AppServiceHTTPLogs",
                    "categoryGroup": null,
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 5,
                      "enabled": false
                    }
                  },
                  {
                    "category": "AppServiceConsoleLogs",
                    "categoryGroup": null,
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 5,
                      "enabled": false
                    }
                  },
                  {
                    "category": "AppServiceAppLogs",
                    "categoryGroup": null,
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 5,
                      "enabled": false
                    }
                  },
                  {
                    "category": "AppServiceAuditLogs",
                    "categoryGroup": null,
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 5,
                      "enabled": false
                    }
                  },
                  {
                    "category": "AppServicePlatformLogs",
                    "categoryGroup": null,
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 5,
                      "enabled": false
                    }
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
              ]
            }
          ],
          "outputs": {
            "outboundIpAdresses": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2022-03-01').outboundIpAddresses]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'acrDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'logAnalyticsDeploy')]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('ctf-mi-{0}', uniqueString(resourceGroup().id)))]"
      ],
      "metadata": {
        "description": "Deploys Azure App Service for containers"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVaultDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('resourcesLocation')]"
          },
          "readerPrincipalId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('ctf-mi-{0}', uniqueString(resourceGroup().id))), '2018-11-30').principalId]"
          },
          "internalResourcesSubnetName": {
            "value": "[variables('internalResourcesSubnetName')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'logAnalyticsDeploy'), '2022-09-01').outputs.logAnalyticsWorkspaceId.value]"
          },
          "vnet": {
            "value": "[parameters('vnet')]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "webAppOutboundIpAdresses": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ctfDeploy'), '2022-09-01').outputs.outboundIpAdresses.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "9948841544273206804"
            }
          },
          "parameters": {
            "vnet": {
              "type": "bool",
              "metadata": {
                "description": "Deploy in VNet"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "readerPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "standard",
                "premium"
              ],
              "metadata": {
                "description": "Specifies whether the key vault is a standard vault or a premium vault."
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "internalResourcesSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Name of the internal resources subnet"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Name of Azure Key Vault"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Anaytics Workspace Id"
              }
            },
            "webAppOutboundIpAdresses": {
              "type": "string",
              "metadata": {
                "description": "Outbound IP adresses of CTF Web App. Required for the non-vnet scenario"
              }
            }
          },
          "variables": {
            "tenantId": "[subscription().tenantId]",
            "networkAcls": "[if(parameters('vnet'), createObject('defaultAction', 'Deny', 'bypass', 'AzureServices'), createObject('defaultAction', 'Allow', 'ipRules', map(split(parameters('webAppOutboundIpAdresses'), ','), lambda('ip', createObject('value', lambdaVariables('ip'))))))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-11-01-preview",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[variables('tenantId')]",
                "publicNetworkAccess": "[if(parameters('vnet'), 'Disabled', 'Enabled')]",
                "enableRbacAuthorization": true,
                "sku": {
                  "name": "[parameters('skuName')]",
                  "family": "A"
                },
                "networkAcls": "[variables('networkAcls')]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "[guid('4633458b-17de-408a-b874-0445c86b69e6', parameters('readerPrincipalId'), resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalId": "[parameters('readerPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "[format('{0}-diagnostics', parameters('keyVaultName'))]",
              "properties": {
                "logs": [
                  {
                    "category": null,
                    "categoryGroup": "audit",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 5,
                      "enabled": false
                    }
                  },
                  {
                    "category": null,
                    "categoryGroup": "allLogs",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 5,
                      "enabled": false
                    }
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "condition": "[parameters('vnet')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "keyVaultPrivateEndpointDeploy",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "virtualNetworkName": {
                    "value": "[parameters('virtualNetworkName')]"
                  },
                  "subnetName": {
                    "value": "[parameters('internalResourcesSubnetName')]"
                  },
                  "resuorceId": {
                    "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                  },
                  "resuorceGroupId": {
                    "value": "vault"
                  },
                  "privateDnsZoneName": {
                    "value": "privatelink.vaultcore.azure.net"
                  },
                  "privateEndpointName": {
                    "value": "keyvault_private_endpoint"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.27.1.19265",
                      "templateHash": "2126031309601035790"
                    }
                  },
                  "parameters": {
                    "virtualNetworkName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the VNet"
                      }
                    },
                    "subnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the subnet"
                      }
                    },
                    "resuorceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Id of the resource"
                      }
                    },
                    "resuorceGroupId": {
                      "type": "string",
                      "metadata": {
                        "description": "Group Id of the resource"
                      }
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of dns zone"
                      }
                    },
                    "privateEndpointName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of private endpoint"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location for all resources."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('privateEndpointName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpointName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('resuorceId')]",
                              "groupIds": [
                                "[parameters('resuorceGroupId')]"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "properties": {}
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('{0}-link', parameters('privateDnsZoneName')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpointName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config1",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]",
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            }
          ],
          "outputs": {
            "keyVaultName": {
              "type": "string",
              "value": "[parameters('keyVaultName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'ctfDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'logAnalyticsDeploy')]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('ctf-mi-{0}', uniqueString(resourceGroup().id)))]"
      ],
      "metadata": {
        "description": "Deploys Azure Key Vault"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "redisDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "internalResourcesSubnetName": {
            "value": "[variables('internalResourcesSubnetName')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "location": {
            "value": "[parameters('resourcesLocation')]"
          },
          "vnet": {
            "value": "[parameters('vnet')]"
          },
          "ctfCacheSecretName": {
            "value": "[variables('ctfCacheSecretName')]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVaultDeploy'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "redisSkuName": {
            "value": "[parameters('redisSkuName')]"
          },
          "redisSkuSize": {
            "value": "[parameters('redisSkuSize')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'logAnalyticsDeploy'), '2022-09-01').outputs.logAnalyticsWorkspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "8910034163638769424"
            }
          },
          "parameters": {
            "vnet": {
              "type": "bool",
              "metadata": {
                "description": "Deploy in VNet"
              }
            },
            "redisSkuName": {
              "type": "string",
              "metadata": {
                "description": "SKU Name for Azure cache for Redis"
              }
            },
            "redisSkuSize": {
              "type": "int",
              "metadata": {
                "description": "The size of the Redis cache"
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "internalResourcesSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Name of the internal resources subnet"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Name of the key vault"
              }
            },
            "ctfCacheSecretName": {
              "type": "string",
              "metadata": {
                "description": "Name of the connection string secret"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Anaytics Workspace Id"
              }
            }
          },
          "variables": {
            "redisServerName": "[format('ctfd-redis-{0}', uniqueString(resourceGroup().id))]",
            "family": "[if(or(equals(parameters('redisSkuName'), 'Basic'), equals(parameters('redisSkuName'), 'Standard')), 'C', 'P')]"
          },
          "resources": [
            {
              "type": "Microsoft.Cache/redis",
              "apiVersion": "2022-06-01",
              "name": "[variables('redisServerName')]",
              "location": "[parameters('location')]",
              "properties": {
                "publicNetworkAccess": "[if(parameters('vnet'), 'Disabled', 'Enabled')]",
                "sku": {
                  "capacity": "[parameters('redisSkuSize')]",
                  "family": "[variables('family')]",
                  "name": "[parameters('redisSkuName')]"
                }
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Cache/redis/{0}', variables('redisServerName'))]",
              "name": "[format('{0}-diagnostics', variables('redisServerName'))]",
              "properties": {
                "logs": [
                  {
                    "category": null,
                    "categoryGroup": "audit",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 5,
                      "enabled": false
                    }
                  },
                  {
                    "category": null,
                    "categoryGroup": "allLogs",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 5,
                      "enabled": false
                    }
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cache/redis', variables('redisServerName'))]"
              ]
            },
            {
              "condition": "[parameters('vnet')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "redisPrivateEndpointDeploy",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "virtualNetworkName": {
                    "value": "[parameters('virtualNetworkName')]"
                  },
                  "subnetName": {
                    "value": "[parameters('internalResourcesSubnetName')]"
                  },
                  "resuorceId": {
                    "value": "[resourceId('Microsoft.Cache/redis', variables('redisServerName'))]"
                  },
                  "resuorceGroupId": {
                    "value": "redisCache"
                  },
                  "privateDnsZoneName": {
                    "value": "privatelink.redis.cache.windows.net"
                  },
                  "privateEndpointName": {
                    "value": "redis_private_endpoint"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.27.1.19265",
                      "templateHash": "2126031309601035790"
                    }
                  },
                  "parameters": {
                    "virtualNetworkName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the VNet"
                      }
                    },
                    "subnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the subnet"
                      }
                    },
                    "resuorceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Id of the resource"
                      }
                    },
                    "resuorceGroupId": {
                      "type": "string",
                      "metadata": {
                        "description": "Group Id of the resource"
                      }
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of dns zone"
                      }
                    },
                    "privateEndpointName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of private endpoint"
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location for all resources."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('privateEndpointName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('privateEndpointName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('resuorceId')]",
                              "groupIds": [
                                "[parameters('resuorceGroupId')]"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('privateDnsZoneName')]",
                      "location": "global",
                      "properties": {}
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('{0}-link', parameters('privateDnsZoneName')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/{1}', parameters('privateEndpointName'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config1",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]",
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cache/redis', variables('redisServerName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "redisKeyDeploy",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "secretName": {
                    "value": "[parameters('ctfCacheSecretName')]"
                  },
                  "secretValue": {
                    "value": "[format('rediss://:{0}@{1}.redis.cache.windows.net:6380', listKeys(resourceId('Microsoft.Cache/redis', variables('redisServerName')), '2022-06-01').primaryKey, variables('redisServerName'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.27.1.19265",
                      "templateHash": "7790741183374077619"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of Azure Key Vault"
                      }
                    },
                    "secretName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the secret"
                      }
                    },
                    "secretValue": {
                      "type": "securestring",
                      "metadata": {
                        "description": "Value of the secret"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secretName'))]",
                      "properties": {
                        "value": "[parameters('secretValue')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cache/redis', variables('redisServerName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'logAnalyticsDeploy')]"
      ],
      "metadata": {
        "description": "Deploys Azure Cache for Redis and a Key Vault secret with its connection string"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "mysqlDbDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "administratorLogin": {
            "value": "[parameters('administratorLogin')]"
          },
          "administratorLoginPassword": {
            "value": "[parameters('administratorLoginPassword')]"
          },
          "vnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnetDeploy'), '2022-09-01').outputs.virtualNetworkId.value]"
          },
          "databaseSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnetDeploy'), '2022-09-01').outputs.databaseResourcesSubnetId.value]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "location": {
            "value": "[parameters('resourcesLocation')]"
          },
          "vnet": {
            "value": "[parameters('vnet')]"
          },
          "ctfDbSecretName": {
            "value": "[variables('ctfDatabaseSecretName')]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVaultDeploy'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "mysqlWorkloadType": {
            "value": "[parameters('mysqlType')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'logAnalyticsDeploy'), '2022-09-01').outputs.logAnalyticsWorkspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "2494312124174264876"
            }
          },
          "parameters": {
            "vnet": {
              "type": "bool",
              "metadata": {
                "description": "Deploy in VNet"
              }
            },
            "administratorLogin": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Database administrator login name"
              }
            },
            "administratorLoginPassword": {
              "type": "securestring",
              "minLength": 8,
              "metadata": {
                "description": "Database administrator password"
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "vnetId": {
              "type": "string",
              "metadata": {
                "description": "ID of the vnet"
              }
            },
            "databaseSubnetId": {
              "type": "string",
              "metadata": {
                "description": "ID of the subnet"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Name of the key vault"
              }
            },
            "ctfDbSecretName": {
              "type": "string",
              "metadata": {
                "description": "Name of the connection string secret"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Anaytics Workspace Id"
              }
            },
            "mysqlWorkloadType": {
              "type": "string",
              "allowedValues": [
                "Development",
                "SmallMedium",
                "BusinessCritical"
              ],
              "metadata": {
                "description": "MySql Workload Type"
              }
            }
          },
          "variables": {
            "mysqlServerName": "[format('ctfd-mysql-{0}', uniqueString(resourceGroup().id))]",
            "tier": "[if(equals(parameters('mysqlWorkloadType'), 'Development'), 'Burstable', if(equals(parameters('mysqlWorkloadType'), 'SmallMedium'), 'GeneralPurpose', 'MemoryOptimized'))]",
            "skuName": "[if(equals(parameters('mysqlWorkloadType'), 'Development'), 'Standard_B1ms', if(equals(parameters('mysqlWorkloadType'), 'SmallMedium'), 'Standard_E2ads_v5', 'Standard_E2ads_v5'))]",
            "storageSizeGB": "[if(equals(parameters('mysqlWorkloadType'), 'Development'), 20, 128)]",
            "iops": "[if(equals(parameters('mysqlWorkloadType'), 'Development'), 360, 2000)]"
          },
          "resources": [
            {
              "type": "Microsoft.DBforMySQL/flexibleServers",
              "apiVersion": "2023-10-01-preview",
              "name": "[variables('mysqlServerName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[variables('skuName')]",
                "tier": "[variables('tier')]"
              },
              "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "storage": {
                  "autoGrow": "Enabled",
                  "iops": "[variables('iops')]",
                  "storageSizeGB": "[variables('storageSizeGB')]"
                },
                "network": "[if(parameters('vnet'), createObject('delegatedSubnetResourceId', parameters('databaseSubnetId'), 'privateDnsZoneResourceId', resourceId('Microsoft.Network/privateDnsZones', format('{0}.private.mysql.database.azure.com', variables('mysqlServerName'))), 'publicNetworkAccess', 'Disabled'), createObject('publicNetworkAccess', 'Enabled'))]",
                "createMode": "Default",
                "version": "8.0.21",
                "backup": {
                  "backupRetentionDays": 7,
                  "geoRedundantBackup": "Disabled"
                },
                "highAvailability": {
                  "mode": "Disabled"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('{0}.private.mysql.database.azure.com', variables('mysqlServerName')))]",
                "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', format('{0}.private.mysql.database.azure.com', variables('mysqlServerName')), parameters('virtualNetworkName'))]"
              ]
            },
            {
              "type": "Microsoft.DBforMySQL/flexibleServers/configurations",
              "apiVersion": "2023-06-30",
              "name": "[format('{0}/{1}', variables('mysqlServerName'), 'collation_server')]",
              "properties": {
                "source": "user-override",
                "value": "UTF8MB4_UNICODE_CI"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/flexibleServers', variables('mysqlServerName'))]"
              ]
            },
            {
              "type": "Microsoft.DBforMySQL/flexibleServers/databases",
              "apiVersion": "2023-06-30",
              "name": "[format('{0}/{1}', variables('mysqlServerName'), 'ctfd')]",
              "properties": {
                "charset": "utf8mb4",
                "collation": "utf8mb4_unicode_ci"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/flexibleServers', variables('mysqlServerName'))]"
              ]
            },
            {
              "condition": "[not(parameters('vnet'))]",
              "type": "Microsoft.DBforMySQL/flexibleServers/firewallRules",
              "apiVersion": "2023-06-30",
              "name": "[format('{0}/{1}', variables('mysqlServerName'), 'AllowAllAzureServicesAndResourcesWithinAzureIps_2024-5-24_16-27-0')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/flexibleServers', variables('mysqlServerName'))]"
              ]
            },
            {
              "condition": "[parameters('vnet')]",
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}.private.mysql.database.azure.com', variables('mysqlServerName'))]",
              "location": "global"
            },
            {
              "condition": "[parameters('vnet')]",
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', format('{0}.private.mysql.database.azure.com', variables('mysqlServerName')), parameters('virtualNetworkName'))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('{0}.private.mysql.database.azure.com', variables('mysqlServerName')))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.DBforMySQL/flexibleServers/{0}', variables('mysqlServerName'))]",
              "name": "[format('{0}-diagnostics', variables('mysqlServerName'))]",
              "properties": {
                "logs": [
                  {
                    "category": null,
                    "categoryGroup": "allLogs",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 5,
                      "enabled": false
                    }
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/flexibleServers', variables('mysqlServerName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "sqlDbKeyDeploy",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "secretName": {
                    "value": "[parameters('ctfDbSecretName')]"
                  },
                  "secretValue": {
                    "value": "[format('mysql+pymysql://{0}:{1}@{2}.mysql.database.azure.com/ctfd?ssl_ca=/opt/certificates/DigiCertGlobalRootCA.crt.pem', parameters('administratorLogin'), parameters('administratorLoginPassword'), variables('mysqlServerName'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.27.1.19265",
                      "templateHash": "7790741183374077619"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of Azure Key Vault"
                      }
                    },
                    "secretName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the secret"
                      }
                    },
                    "secretValue": {
                      "type": "securestring",
                      "metadata": {
                        "description": "Value of the secret"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secretName'))]",
                      "properties": {
                        "value": "[parameters('secretValue')]"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'logAnalyticsDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'vnetDeploy')]"
      ],
      "metadata": {
        "description": "Deploys Azure Database for MySql and a Key Vault secret with its connection string"
      }
    }
  ]
}